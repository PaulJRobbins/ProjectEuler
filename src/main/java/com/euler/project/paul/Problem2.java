package com.euler.project.paul;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.robbins.paul.utils.JavaUtils;

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, 
 * the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the 
 * even-valued terms.
 */
public class Problem2 {

	public static void main(String[] args) {
		long[] fibs = JavaUtils.getEvensFromArray(getFibonaccisUpToN(4000000));
		System.out.println(Arrays.toString(fibs));
		System.out.println("Total: " + JavaUtils.total(fibs));
	}

	public static long[] getFibonaccisUpToN(int max) {
		List<Long> fibs = new ArrayList<Long>();
		long f1 = 0;
		long f2 = 1;
		long iterator = 1;
		do {
			f2 = iterator + f1;
			iterator = f1;
			f1 = f2;
			fibs.add(iterator);
		} while(iterator < max);
//		for (long i = 1; i + f1 < max;) {
//			f2 = i + f1;
//			i = f1;
//			f1 = f2;
//			fibs.add(i);
//		}
		return JavaUtils.longListToArray(fibs);
	}
}
